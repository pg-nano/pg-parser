name: CI (GitHub)
on:
  - push
  - pull_request
permissions: {}
jobs:
  CI:
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    name: ${{ matrix.container || matrix.os }} - Node.js ${{ matrix.nodejs_version }} ${{ matrix.nodejs_arch }}
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-24.04
            container: rockylinux:8
            nodejs_version: 16
          - os: ubuntu-24.04
            container: node:16-alpine3.12
          - os: macos-12
            nodejs_version: 16
            nodejs_arch: x64
          - os: macos-14
            nodejs_version: 18
            nodejs_arch: arm64
          - os: windows-2019
            nodejs_version: 16
            nodejs_arch: x86
          - os: windows-2019
            nodejs_version: 16
            nodejs_arch: x64
    steps:
      - uses: pnpm/action-setup@v4

      - name: Dependencies (Rocky Linux glibc)
        if: contains(matrix.container, 'rockylinux')
        run: |
          curl -sL https://rpm.nodesource.com/setup_${{ matrix.nodejs_version }}.x | bash -
          dnf install -y gcc-toolset-11-gcc-c++ make git python3.12 nodejs
          echo "/opt/rh/gcc-toolset-11/root/usr/bin" >> $GITHUB_PATH
          echo "PYTHON=/usr/bin/python3.12" >> $GITHUB_ENV

      - name: Dependencies (Linux musl)
        if: contains(matrix.container, 'alpine')
        run: apk add build-base git python3 --update-cache

      - name: Dependencies (Python - macOS, Windows)
        if: contains(matrix.os, 'macos') || contains(matrix.os, 'windows')
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Dependencies (Node.js - macOS, Windows)
        if: contains(matrix.os, 'macos') || contains(matrix.os, 'windows')
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.nodejs_version }}
          architecture: ${{ matrix.nodejs_arch }}
          cache: pnpm

      - name: Checkout
        uses: actions/checkout@v4

      - name: Install libpg_query
        run: git submodule update --init --recursive

      - name: Install
        run: pnpm install --build-from-source --unsafe-perm

      # - name: Test
      #   run: pnpm test

      - name: Prebuild
        env:
          prebuild_upload: ${{ secrets.GITHUB_TOKEN }}
        run: pnpm dlx prebuild --runtime napi --target 8
